c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
request.path
menu_item.self_and_descendants.collect(&:url)
menu_item.self_and_descendants
menu_item.self_and_descendants.select{|mi| mi.url.present? && (mi.url == request.path || request.path.start_with?(mi.url + "/")) }
request.path
menu_item
c
ids
c
ids
c
ids
c
menu_items
c
User.permitted_attributes
params
c
self
user
c
load_and_authorize_resource :ingredient, class: 'FoodMenus::Ingredient'
c
params
c
params
c
params
c
params
c
params
action_name
c
setting_params
params
@setting
c
@collection
c
food_menus_ingredients_path
c
@ingredient = current_user.ingredients.find(params[:id])
params
c
flash[:alert] = I18n.t :blank, scope: :request_password_reset
params[:email].blank? || !(params[:email] =~ /@/)
@user = User.find_by_email(params[:email])
c
menu_item
c
menu_item
c
menu_item
c
params
c
params
c
params
c
params
shopping_list_params
c
recipe.collection.id
ecipe.collection.id
unit.id
ingredient.id
recipe.collection.id
recipe.collection
exit
recipe.collection.collection_ingredients
recipe.collection
recipe.collection.any?
recipe.collection
recipe.ingredients
recipe.collection
recipe.collection.collection_ingredient
recipe.collection
ingredient
recipe
exit
recipe
ingredient
ingredient.id
c
self
exit
unitexit
ingredient.id
qty
unit.id
unit
exit
row
qty
c
qty
qty)
cur_qty.to_i
 (cur_qty - BigDecimal.new(qty)).to_i
 (cur_qty - BigDecimal.new(qty))
 (cur_qty - BigDecimal.new(qty)
(cur_qty - BigDecimal.new(qty)) > BigDecimal.new(0)
c
(cur_qty - BigDecimal.new(qty)) > BigDecimal.new(0)
cur_qty - BigDecimal.new(qty)
BigDecimal.new(0)
BigDecimal.new(qty)
qty
@shopping_list_ingredient.quantity
cur_qty
c
@shopping_list_ingredient
c
(@shopping_list_ingredient.quantity - qty.to_d) <= (0).to_d
(@shopping_list_ingredient.quantity - qty) <= (0).to_d
(0).to_d
@shopping_list_ingredient.quantity -
@shopping_list_ingredient.quantity
qty
(@shopping_list_ingredient.quantity - qty) <= 0.0
c
(@shopping_list_ingredient.quantity - qty) <= 0.0
@shopping_list_ingredient.quantity - qty
c
params
c
params
c
params
c
params
c
params
c
params
c
params
action_name
ction_name
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
request
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
shopping_list_params
c
shopping_list_params
params
params[:custom_action]
c
action_name
c
action_name
c
action_name
action
c
action_name
c
@start_date = @end_date - 14.day
@end_date
Date.today
c
$settings.menu_rotation_weeks
$setting = nil
$settings.menu_rotation_weeks
$setting = Setting.all.first
$settings.menu_rotation_weeks
c
$settings.menu_rotation_weeks
$setting = Setting.all.first
Setting.all.first
setting_params
$settings.menu_rotation_weeks
byebug
c
setting_params
$settings.menu_rotation_weeks
c
$settings.menu_rotation_weeks
c
week
c
cc
day
week
c
session[:recipe_return_to]
c
session[:recipe_return_to]
c
session[:recipe_return_to]
c
request.referer
session[:recipe_return_to]
c
session
session.all
session
session[:recipe_return_to]
 request.referer.referer
 request.referer.referere
 request.referer
session[:recipe_return_to]
request session[:recipe_return_to]
request
session
session(:recipe_return_to)
session(:recipe_return_to
c
action_name
c
quit
@recipe_ingredient
@recipe
