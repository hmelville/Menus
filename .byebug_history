c
request.path
menu_item.name
request.path
menu_item.name
c
params
target.class.name != "MenuRotations" && (target.collection_recipes.any? || Rails.application.routes.recognize_path(request.referrer)[:action] == "show" || target.class.name == "ShoppingList")
target.class.name
c
target.class.table_name
target.class.tablename
target.class.name.modulize
target.class.name.demodulize
target.class.demodulize
target.class.demodilise
target.class.demodilize
target.class.name.demodilize
target.class.name.demodilise
c
Rails.application.routes.recognize_path(request.referrer)
c
target.class.name.demodulize
target.class.name
target.class_name
target.id
target.class
c
Rails.application.routes.recognize_path(request.referrer)[:action]
Rails.application.routes.recognize_path(request.referrer)
request.referer
request
referrer
params
referer
c
cc
c
id
partial
klass
c
render_to_string(nothing: true, status: :ok, content_type: "text/html") 
target.collection_ingredients.any?
c
params[:build][:start_date]
params[:build]
params
c
paramsc
params
c
params
c
@start_date
c
cc
@start_date
c
@shopping_list 
c
@shopping_list 
c
@shopping_list
@meal
@recipe
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
shopping_list_ingredients.unscoped
shopping_list_ingredients.all
shopping_list_ingredients
c
params
c
action_name
@shopping_lists
current_user
@shopping_list
c
@shopping_list
c
@shopping_list_ingredient.quantity.to_s
@shopping_list_ingredient.reload
@shopping_list_ingredient.quantity.to_s
@shopping_list_ingredient
c
@shopping_list_ingredient.quantity.to_s
@shopping_list_ingredient.quantity
qty
c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
c
menu_item.self_and_descendants.collect(&:url).include?(request.path)
request.path
menu_item.self_and_descendants.collect(&:url)
menu_item.self_and_descendants
menu_item.self_and_descendants.select{|mi| mi.url.present? && (mi.url == request.path || request.path.start_with?(mi.url + "/")) }
request.path
menu_item
c
ids
c
ids
c
ids
c
menu_items
c
User.permitted_attributes
params
c
self
user
c
load_and_authorize_resource :ingredient, class: 'FoodMenus::Ingredient'
c
params
c
params
c
params
c
params
c
params
action_name
c
setting_params
params
@setting
c
@collection
c
food_menus_ingredients_path
c
@ingredient = current_user.ingredients.find(params[:id])
params
c
flash[:alert] = I18n.t :blank, scope: :request_password_reset
params[:email].blank? || !(params[:email] =~ /@/)
@user = User.find_by_email(params[:email])
c
menu_item
c
menu_item
c
menu_item
c
params
c
params
c
params
c
params
shopping_list_params
c
recipe.collection.id
ecipe.collection.id
unit.id
ingredient.id
recipe.collection.id
recipe.collection
exit
recipe.collection.collection_ingredients
recipe.collection
recipe.collection.any?
recipe.collection
recipe.ingredients
recipe.collection
recipe.collection.collection_ingredient
recipe.collection
ingredient
recipe
exit
recipe
ingredient
ingredient.id
c
self
exit
unitexit
ingredient.id
qty
unit.id
unit
exit
row
qty
c
qty
qty)
cur_qty.to_i
 (cur_qty - BigDecimal.new(qty)).to_i
 (cur_qty - BigDecimal.new(qty))
 (cur_qty - BigDecimal.new(qty)
(cur_qty - BigDecimal.new(qty)) > BigDecimal.new(0)
c
(cur_qty - BigDecimal.new(qty)) > BigDecimal.new(0)
cur_qty - BigDecimal.new(qty)
BigDecimal.new(0)
BigDecimal.new(qty)
qty
@shopping_list_ingredient.quantity
cur_qty
c
@shopping_list_ingredient
c
(@shopping_list_ingredient.quantity - qty.to_d) <= (0).to_d
(@shopping_list_ingredient.quantity - qty) <= (0).to_d
(0).to_d
@shopping_list_ingredient.quantity -
@shopping_list_ingredient.quantity
qty
(@shopping_list_ingredient.quantity - qty) <= 0.0
c
(@shopping_list_ingredient.quantity - qty) <= 0.0
@shopping_list_ingredient.quantity - qty
c
params
c
params
c
params
c
params
c
params
c
params
c
params
action_name
ction_name
c
params
c
